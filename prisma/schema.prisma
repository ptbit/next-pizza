generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  fullName String
  email    String   @unique
  password String
  role     UserRole @default(USER)

  provider   String?
  providerId String?

  cart             Cart?
  order            Order[]
  verified         DateTime          @default(now())
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  name   String
  imgUrl String

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  ingredients Ingredient[]
  items       ProductItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id     Int    @id @default(autoincrement())
  name   String @unique
  price  Int
  imgUrl String

  products Product[]
  cartItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductItem {
  id        Int  @id @default(autoincrement())
  price     Int
  size      Int?
  pizzaType Int?

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id          Int    @id @default(autoincrement())
  totalAmount Int    @default(0)
  token       String

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items      CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity    Int
  ingredients Ingredient[]
  // pizzaSize Int?
  // pizzaType Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          Int         @id @default(autoincrement())
  token       String
  totalAmount Int
  status      OrderStatus
  paymentId   String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  items Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  code String

  createdAt DateTime @default(now())

  @@unique([userId, code])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELED
}

enum UserRole {
  USER
  ADMIN
}
